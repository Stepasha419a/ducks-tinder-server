apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-app-deployment
  template:
    metadata:
      labels:
        app: postgres-app-deployment
    spec:
      securityContext:
        fsGroup: 101
        runAsUser: 70
      containers:
        - name: postgres-app-deployment
          image: postgres:13-alpine
          resources:
            limits:
              cpu: '0.125'
              memory: '64Mi'
            requests:
              cpu: '0.125'
              memory: '32Mi'
          volumeMounts:
            - name: data-volume
              mountPath: /var/lib/postgresql/data
            - name: tls-volume
              mountPath: /var/lib/postgresql/cert
            - name: config-volume
              mountPath: /var/lib/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: config-volume
              mountPath: /var/lib/postgresql/pg_hba.conf
              subPath: pg_hba.conf
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: prisma
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          args:
            - -c
            - config_file=/var/lib/postgresql/postgresql.conf
      volumes:
        - name: tls-volume
          secret:
            secretName: common-ca-tls-secret
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
                mode: 0640
              - key: ca.crt
                path: ca.crt
        - name: config-volume
          configMap:
            name: postgres-config
        - name: data-volume
          persistentVolumeClaim:
            claimName: postgres-pvc
