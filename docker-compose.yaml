name: 'ducks-tinder'
services:
  chat-service:
    container_name: chat-service
    restart: always
    build:
      context: chat-service
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev chat
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '${CHAT_SERVICE_PORT}:${CHAT_SERVICE_PORT}'
  user-service:
    container_name: user-service
    restart: always
    build:
      context: .
      dockerfile: user-service/Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - rabbitmq
    ports:
      - '${USER_SERVICE_PORT}:${USER_SERVICE_PORT}'
  auth-service:
    container_name: auth-service
    restart: always
    build:
      context: auth-service
      dockerfile: Dockerfile
    env_file:
      - ./auth-service/.env
    ports:
      - '${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}'
    deploy:
      restart_policy:
        condition: on-failure
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - '${RABBITMQ_PORT}:${RABBITMQ_PORT}'
      - '15672:15672'
  postgres:
    container_name: postgres
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT_LOCAL}:${POSTGRES_PORT}'
